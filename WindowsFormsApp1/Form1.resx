<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        8QD3/AefdA90dV8j3/Aee6Hh3/D13Tl3H//Z
</value>
  </data>
</root>